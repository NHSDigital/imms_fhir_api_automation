trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    python -m venv venv
    source venv/bin/activate
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install allure-pytest
  displayName: 'Install dependencies'

- script: |
    sudo apt update
    sudo apt install -y default-jre wget unzip
    wget https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.zip
    unzip allure-2.21.0.zip -d /opt/
    sudo ln -s /opt/allure-2.21.0/bin/allure /usr/bin/allure
    allure --version
  displayName: 'Install Allure CLI'

- script: |
    allure --version
  displayName: 'Verify Allure Installation'

- script: |
    source venv/bin/activate
    pytest --alluredir=output/allure-results || true
  displayName: 'Run Pytest-BDD tests with Allure'

- script: |
    allure generate output/allure-results -o output/allure-report --clean || true
  displayName: 'Generate Allure Report'

# Optional: Enable Allure tab in DevOps (if extension is installed)
# - task: AllureReport@1
#   inputs:
#     resultsDirectory: 'output/allure-results'
#     targetDirectory: 'output/allure-report'
#   displayName: 'Generate Allure Report'

- script: |
    mkdir -p $(Build.ArtifactStagingDirectory)/allure-report
    cp -r output/allure-report/* $(Build.ArtifactStagingDirectory)/allure-report
  displayName: 'Copy Allure report to staging directory'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/allure-report'
    artifactName: 'AllureReport'
  displayName: 'Publish Allure Report Artifact'